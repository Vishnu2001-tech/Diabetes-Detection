# -*- coding: utf-8 -*-
"""train.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14mgC3tiqUcaEXhdJzXdi8jtYMA7YiYgl
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

dia = pd.read_csv("diabetes.csv")

dia.head()

dia.shape

dia.describe()

dia['Outcome'].value_counts()

dia.groupby('Outcome').mean()

x=dia.drop(columns='Outcome',axis=1)
y=dia['Outcome']

print(x)

print(y)

X_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,stratify=y,random_state=2)

print(x.shape,X_train.shape,x_test.shape)

"""Model Training """

classifer=svm.SVC(kernel='linear')

classifer.fit(X_train,y_train)

"""Model Evaluation"""

X_train_pred=classifer.predict(X_train)
training_data_accuracy=accuracy_score(X_train_pred,y_train)

print("Accuracy score of the training model is",training_data_accuracy)

x_test_pred=classifer.predict(x_test)
test_data_accuracy=accuracy_score(x_test_pred,y_test)

print("Accuracy score of the testing model",test_data_accuracy)

"""temporary predictive system for the model"""

input = [5,166,72,19,175,25.8,0.587,51]

convert =np.asarray(input)
convert_shaped = convert.reshape(1,-1)

prediction = classifer.predict(convert_shaped)

print(prediction)

if(prediction[0]==0):
    print("Dude is Diabetic")
else:
    print("He Fine")

"""Save The Model"""

import pickle

filename="trained_model.sav"
pickle.dump(classifer,open(filename,'wb'))

"""Load the model"""

loaded_model = pickle.load(open('trained_model.sav','rb'))

